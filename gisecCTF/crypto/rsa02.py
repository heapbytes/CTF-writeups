from Crypto.Util.number import long_to_bytes as ltb, bytes_to_long as btl, getPrime

def encrypt(data,modulus,exponent):
	m = btl(data)
	assert m < modulus
	return pow(m,exponent,modulus)

p = getPrime(1024)
e = 65537
flag = b'REDACTED' 
enc = encrypt(flag,p,e)

print(f"The public modulus is {p} and the public exponent is {e}")
print(f"the encrypted message is {enc}")

### output
# Modulus : 112982701372174135714541042310119603841026379112918124295881022614737112371220762441907782664659731337882611618073932602250654493138913463938845301253189700405866110321629159954074959013313377755909094741063956063693566385004932946379171399803086360345144176502740660343813066761541114575303369296657820791163
# exponent : 65537
# enc : 88141540951737078954711359053703593325078389546811543323485621484335479181438565486859296481048233669690960889452061331519730183047651396823229616235927347293019123019960473648346632385013116149218399356862585923576702106272464521515411861334123999555184256317150974435399215722800702933617092969151016036160
